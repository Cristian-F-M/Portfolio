---
import ToggleTheme from "./ToggleTheme.astro";

const navItems = [
    {
        label: "Experiencia",
        url: "#Experiencia",
        title: "Experiencia",
    },
    {
        label: "Proyectos",
        url: "#Proyectos",
        title: "Proyectos",
    },
    {
        label: "Sobre-mí",
        url: "#Sobre-mi",
        title: "Sobre mí",
    },
    {
        label: "Contacto",
        url: "mailto:cfmorales.diaz@gmail.com",
        title: "Contacto",
    },
];
---

<header
    class="flex gap-6 py-2 px-5 mt-2 rounded-xl items-center h-fit sticky top-2 z-[200]"
>
    <div
        style="--left: -110px; --top: 8px"
        id="menu-backdrop"
        class="absolute bg-green-700/30 dark:bg-green-500/20 5 backdrop-blur-lg rounded translate-x-[var(--left)] translate-y-[var(--top)] left-0 top-0 w-[var(--width)] h-[var(--height)] transition-all duration-500 ease-in-out opacity-0 -z-[1]"
    >
    </div>
    <nav>
        <ul class="size-full flex gap-4 dark:text-inherit text-inherit">
            {
                navItems.map((link) => (
                    <li>
                        <a aria-label={link.label} href={link.url}>
                            {link.title}
                        </a>
                    </li>
                ))
            }
        </ul>
    </nav>
    <ToggleTheme />
</header>

<style>
    li {
        @appl rounded;
    }

    a {
        @apply px-2 py-1 size-full block text-inherit;
    }
    header {
        animation: nav-shadown 1s linear both;
        animation-timeline: scroll();
        animation-range: 0 100px;
    }
    @keyframes nav-shadown {
        to {
            @apply dark:bg-[#fff] bg-gray-500/50  backdrop-blur-sm text-white/70;
        }
    }
</style>

<script>
    import { $, $$ } from "@/utils/DOM";

    const listItem = $$("header li");
    const menuBackDrop = $("#menu-backdrop") as HTMLElement;
    const header = $("header") as HTMLElement;

    listItem.forEach((item) => {
        item.addEventListener("mouseenter", () => {
            const { left, top, width, height, x, y } =
                item.getBoundingClientRect();
            const { left: headerLeft, top: headerTop } =
                header.getBoundingClientRect();

            const newLeft = left - headerLeft;
            const newTop = top - headerTop;

            menuBackDrop.style.setProperty("--left", `${newLeft}px`);
            menuBackDrop.style.setProperty("--top", `${newTop}px`);
            menuBackDrop.style.setProperty("--width", `${width}px`);
            menuBackDrop.style.setProperty("--height", `${height}px`);

            menuBackDrop.style.opacity = "1";
            menuBackDrop.style.visibility = "visible";
        });

        item.addEventListener("mouseleave", () => {
            menuBackDrop.style.opacity = "0";
            menuBackDrop.style.visibility = "hidden";
        });
    });
</script>
